{
    "app.name": "NokTech Deploy",
    "app.description": "Advanced deployment client with multiple protocols support",
    "app.version": "Version",
    "app.author": "Author",
    "app.repo": "Repository",
    
    "mode.interactive": "Interactive Mode",
    "mode.watch": "Watch Mode",
    
    "protocol.select": "Choose protocol:",
    "protocol.ssh": "SSH/SFTP",
    "protocol.ftp": "FTP",
    "protocol.local": "Local",
    
    "input.choice": "Option",
    "input.source_path": "Source files path:",
    "input.dest_path": "Destination path:",
    "input.host": "Host:",
    "input.user": "Username:",
    "input.password": "Password:",
    "input.key_path": "SSH key path:",
    "input.port": "Port ({}):",
    "input.watch": "Enable watch mode? (y/n):",
    "input.overwrite": "Overwrite existing files?",
    
    "build.usage": "Usage: python build.py <command> [options]",
    "build.commands": "\nCommands:",
    "build.cmd.clean": "  clean     - Clean build directories",
    "build.cmd.release": "  release   - Execute complete release process",
    "build.cmd.exe": "  exe       - Generate executable",
    "build.cmd.package": "  package   - Create poetry package",
    "build.cmd.test": "  test      - Run tests",
    "build.cmd.all": "  all       - Execute all processes",
    "build.cmd.docs": "  docs      - Generate documentation",
    
    "build.cleaning": "\n🧹 Cleaning directories...",
    "build.installing": "\n📦 Installing dependencies...",
    "build.formatting": "\n🎨 Formatting code...",
    "build.testing": "\n🧪 Running tests...",
    "build.packaging": "\n📦 Building package...",
    "build.executable": "\n🚀 Generating executable...",
    "build.complete": "\n✨ Build complete!",
    "build.docs": "\n📚 Generating documentation...",
    "build.clean_complete": "Clean complete!",
    "build.creating_package": "\nCreating distribution package...",
    "build.installing_global": "\nInstalling globally...",
    "build.install_complete": "\nInstallation complete!",
    
    "build.error.unknown": "Unknown command: {}",
    "build.error.deps": "Error: Dependency not found - {}",
    "build.error.build": "Build error: {}",
    "build.error.interrupted": "\n\nProcess interrupted by user",
    
    "build.next_steps": "\nNext steps:",
    "build.step.changelog": "1. Review CHANGELOG.md",
    "build.step.commit": "2. Commit changes",
    "build.step.tag": "3. Create version tag",
    "build.step.publish": "4. Run: poetry publish",
    
    "release.checking_deps": "📋 Checking dependencies...",
    "release.current_version": "📦 Current version: {}",
    "release.new_version": "New version (Enter to increment patch): ",
    "release.starting": "🚀 Starting build version {}",
    "release.version_updated": "📝 Version updated to {}",
    "release.missing_files": "❌ CHANGELOG.md and README.md are required for release",
    "release.complete": "✨ Release v{} published successfully!",
    "release.error": "❌ Error in release process: {}",
    
    "version.checking": "🔄 Checking version...",
    "version.mismatch": "⚠️ Outdated version! Local: {}, Remote: {}",
    "version.opening_browser": "🌐 Opening releases page...",
    "version.error.browser": "❌ Error opening browser: {}",
    "version.error.fetch": "❌ Could not verify remote version",
    "version.error.parse": "❌ Error parsing remote version",
    "version.error.check": "❌ Error checking version: {}"
} 